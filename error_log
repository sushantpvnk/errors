  File "/usr/lib/python3/dist-packages/httplib2/__init__.py", line 1421, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/httplib2/__init__.py", line 1343, in _conn_request
    conn.connect()
  File "/usr/lib/python3/dist-packages/httplib2/__init__.py", line 1135, in connect
    self.sock = self._context.wrap_socket(sock, server_hostname=self.host)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/ssl.py", line 1042, in _create
    self.do_handshake()
  File "/usr/lib/python3.12/ssl.py", line 1320, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate in certificate chain (_ssl.c:1000)


sushant@sushant-VirtualBox:~$ wget --no-check-certificate -O - https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x93C4A3FD7BB9C367 | sudo apt-key add -
[1] 11228

Redirecting output to ‘wget-log’.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
gpg: no valid OpenPGP data found.




wget --no-check-certificate -O - https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x93C4A3FD7BB9C367 | sudo apt-key add -

sudo sh -c 'echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ansible.list'




---
- name : Create an ec2 instance
  hosts : localhost
  gather_facts:  no

  tasks:
    - name: Create an ec2 instance
      community.aws.ec2_instances:
        name: "myinstance"
        region: "us-east-1"
        instance_type: "t2.micro"
        key_name: "demo"
        security_groups: "sg-0f29624f60c1c9c73"
        image-id: "ami-04a81a99f5ec58529"
        wait: yes
        count: 1
      register: ec2

    - name: Print instance information
      debug:
        var: ec2.instances


sudo apt-get update

sudo apt-get install ansible







[Unit]
Description=SonarQube service
After=syslog.target network.target

[Service]
Type=forking

ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop

User=sonarqube
Group=sonarqube
Restart=always
LimitNOFILE=65536

[Install]





wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
WantedBy=multi-user.target

Started by user admin

Running as SYSTEM
Building in workspace /var/lib/jenkins/workspace/sonarqube_demo
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] Done
The recommended git tool is: NONE
using credential github_token
Cloning the remote Git repository
Cloning repository https://github.com/sushantpvnk/gs-spring-boot.git
 > git init /var/lib/jenkins/workspace/sonarqube_demo # timeout=10
Fetching upstream changes from https://github.com/sushantpvnk/gs-spring-boot.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
using GIT_ASKPASS to set credentials 
 > git fetch --tags --force --progress -- https://github.com/sushantpvnk/gs-spring-boot.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/sushantpvnk/gs-spring-boot.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision ef888489c0ba0f0f86e3f524eecdbf5d1771d715 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f ef888489c0ba0f0f86e3f524eecdbf5d1771d715 # timeout=10
Commit message: "Update HelloController.java"
First time build. Skipping changelog.
[sonarqube_demo] $ /bin/sh -xe /tmp/jenkins14342114758567619748.sh
+ mvn clean verify sonar:sonar -Dsonar.projectKey=sonarqube_demo -Dsonar.projectName=sonarqube_demo -Dsonar.host.url=http://localhost:9000 -Dsonar.token=sqp_0a9928cbc35f28991118f2b612433752db386fd3
/tmp/jenkins14342114758567619748.sh: 2: mvn: not found
Build step 'Execute shell' marked build as failure
Finished: FAILURE

mvn clean verify sonar:sonar \
  -Dsonar.projectKey=sonarqube_demo \
  -Dsonar.projectName='sonarqube_demo' \
  -Dsonar.host.url=http://localhost:9000 \
  -Dsonar.token=sqp_0a9928cbc35f28991118f2b612433752db386fd3


ngrok config add-authtoken 2kY6M3cVYiGAjPNq25oKm5xOdRk_4QbBkLTZDYXRfYRHtAwac

clean verify sonar:sonar -Dsonar.projectKey=sonarqube_demo -Dsonar.projectName='sonarqube_demo' -Dsonar.host.url=http://localhost:9000 -Dsonar.token=sqp_0a9928cbc35f28991118f2b612433752db386fd3


Started by user admin

Running as SYSTEM
Building in workspace /var/lib/jenkins/workspace/sonarqube_demo
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] Done
The recommended git tool is: NONE
using credential github_token
Cloning the remote Git repository
Cloning repository https://github.com/sushantpvnk/gs-spring-boot.git
 > git init /var/lib/jenkins/workspace/sonarqube_demo # timeout=10
Fetching upstream changes from https://github.com/sushantpvnk/gs-spring-boot.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
using GIT_ASKPASS to set credentials 
 > git fetch --tags --force --progress -- https://github.com/sushantpvnk/gs-spring-boot.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/sushantpvnk/gs-spring-boot.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision ef888489c0ba0f0f86e3f524eecdbf5d1771d715 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f ef888489c0ba0f0f86e3f524eecdbf5d1771d715 # timeout=10
Commit message: "Update HelloController.java"
 > git rev-list --no-walk ef888489c0ba0f0f86e3f524eecdbf5d1771d715 # timeout=10
Unpacking https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.8/apache-maven-3.9.8-bin.zip to /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven_demo on Jenkins
[sonarqube_demo] $ /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven_demo/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=sonarqube_demo -Dsonar.projectName=sonarqube_demo -Dsonar.host.url=http://localhost:9000 -Dsonar.token=sqp_0a9928cbc35f28991118f2b612433752db386fd3
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  0.374 s
[INFO] Finished at: 2024-08-12T15:00:18+05:30
[INFO] ------------------------------------------------------------------------
[ERROR] The goal you specified requires a project to execute but there is no POM in this directory (/var/lib/jenkins/workspace/sonarqube_demo). Please verify you invoked Maven from the correct directory. -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MissingProjectException
Build step 'Invoke top-level Maven targets' marked build as failure
Finished: FAILURE
